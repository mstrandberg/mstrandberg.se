@use "../node_modules/normalize.css/normalize";

@use "source/every-layout" as *;

@use "scss/swatches" as *;


@import url('https://fonts.googleapis.com/css2?family=DM+Serif+Text:ital@0;1&display=swap');
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=DM+Mono:ital,wght@0,400;0,500;1,400;1,500&display=swap');


$typeface-headline: 'DM Serif Text', serif;
$typeface-sans: 'DM Sans', sans-serif;
$typeface-mono: 'DM Mono', monospace;


@mixin ephemeral {
	opacity: 0.7;
}
@mixin ephemeraler {
	opacity: 0.6;
}
.u-ephemeral {
	@include ephemeral
}
.u-ephemeraler {
	@include ephemeraler
}
.u-separator {
	&\:commas > *:not(:last-child):after {
		white-space: pre;
		content: ", ";
	}
	&\:spaces > * + *:before {
		white-space: pre;
		content: " ";
	}
	&\:ems > * + *:before {
		width: 1em;
		white-space: pre;
		content: " ";
	}
}


html {
	box-sizing: border-box;
	scroll-behavior: smooth;
}
*, *:before, *:after {
	box-sizing: inherit;
}

body {
	background-color: var(--background-swatch);
	color: var(--text-swatch);
	font-family: $typeface-headline;
	font-size: 1.25em;

	line-height: 1.5;
	display: flex;
	flex-wrap: wrap;

	@media (orientation: portrait) {
		font-size: calc(0.75em + (0.555vmin));
	}

	@media (orientation: landscape) {
		font-size: calc(1.25em + 0.111vmax);
	}


	&:before, &:after {
		z-index: 100;
		content: "";
		background: linear-gradient(rgba(var(--background-rgb), 1) 0%, rgba(var(--background-rgb), 0) 100%);
		position: fixed;
		left: 0;
		right: 0;
		height: 10vh;
	}
	&:before {
		top:0;
	}
	&:after {
		bottom: 0;
		transform: rotate(180deg);
	}

}

main {
	min-height: 100-((100/9)*4)*1vh;
	min-width: 100%;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: inherit;
	margin: unset;

	* + & {
		margin-top: 1em;
	}
}
h1, h2 {
	font-size: 3.75em;
	line-height: 1;
	margin-right: (100/9)*-1vw;
}
h3, .h3 {
	font-size: 2.5em;
	line-height: 1.1;
}

p {
	//min-width: 50ch;
	max-width: 60ch;
}

a {
	color: inherit;
}


ul[class] {
	list-style: none;
	padding-left: unset;
}

section {
	min-height: 100vh;
	max-width: 100vw;
	padding: (100/9)*1vh (100/9)*2vw;
}

section:first-child {
	margin-bottom: -(100/9)*1vh;
}

section:not(:first-child) {
	min-height: 100vh;
}

aside {
	@include ephemeral;
	z-index: 200;
	padding: (100/9)*1vh 0;
	display: flex;
	align-items: center;
	position: fixed;
	left: 0;
	width: (100/9)*2vw;
	font-family: $typeface-sans;
	text-transform: uppercase;
	letter-spacing: 0.5em;
	writing-mode: vertical-lr;
}

nav {
	padding: 0 (100/9)*1vw;
	z-index: 1000;
	position: sticky;
	top: 0;
	font-family: $typeface-sans;
	font-weight: 500;

	ul {

	}

	a {
		color: inherit;
		text-decoration-thickness: 0.1em;
		text-underline-offset: 0.5em;
	}
}


.container {

	&\:overflow {
		overflow: auto;
		scrollbar-color: transparent transparent;
		transition: scrollbar-color 0.5s ease-in-out;
		
		&:hover { 
			scrollbar-color: rgba( var(--text-rgb), opacity-preset(medium) ) transparent;
		}
		
		&:hover::-webkit-scrollbar {
			opacity: 1;
		}
		&::-webkit-scrollbar {
			opacity: 0;
			background-color: transparent;
			height: 0.4em;
			width: 0.4em;
		}
		
		&::-webkit-scrollbar-thumb {
			background-color: rgba( var(--text-rgb), opacity-preset(medium) );;
			border-radius: 100em;
		}
		
		@media (orientation: portrait) {
			
			padding-block: (100/9)*1vh;


			> * {


				&.layout\:grid {

				}
			}
		}


		@media (orientation: landscape) {
			padding-inline: (100/9)*2vw;
			margin: (100/9)*1vh (100/9)*-2vw;

			> * {
				min-width: min-content;
				padding-inline: inherit;

				&.layout\:grid {
					min-width: max-content;
				}
			}
		}
	}
}

.Cluster {
	font-family: $typeface-sans;

	&Item {
		@include flow(inline);
		@include gap-size(normal);
		@include gap-flow(stack);
		@include align(baseline);

		@extend h3;

		white-space: nowrap;

		> * + * {
			@include ephemeral;
		}
	}
}

.Timeline {
	&.layout\:grid {
		--span: 1; // Default

		$dottedLineSpacing: 6;
		$color: rgba( var(--text-rgb), opacity-preset(medium) );
		$alignment: center;
		$thickness: 2;

		display: grid;

		@media (orientation: portrait) {
			--lineOrientation: bottom;
			background-position: 25% $alignment ;
			background-size: ($thickness + px) ($dottedLineSpacing + px);
			background-repeat: repeat-y;

			grid-auto-rows: 1fr;
			grid-auto-flow: row;

			padding-bottom: 3em;

			& > * {
				grid-row: span var(--span);
			}
		}
		@media (orientation: landscape) {
			--lineOrientation: right;
			background-position: 0 $alignment;
			background-size: ($dottedLineSpacing + px) ($thickness + px);
			background-repeat: repeat-x;

			grid-auto-columns: 1fr;
			grid-auto-flow: column;

			padding-top: 1.5em;

			& > * {
				grid-column: span var(--span);
			}
		}


		background-image: linear-gradient(
			to var(--lineOrientation),
			$color 0%,
			$color (100% / $dottedLineSpacing *$thickness),
			transparent (100% / $dottedLineSpacing)
		);





		text-align: right;
		//line-height: 1;
		//overflow: hidden;
	}


	&Item {
		@media (orientation: portrait) {
			@include flow(inline, start);
			@include align(end);

			ul {
				min-width: 25%;
				@include align(end);
			}

			div {
				@include flow(block);
				@include align(start);

				&:before {
					//content: "";
				}

				span:first-child {
					background-image: linear-gradient(
						to right,
						rgba( var(--text-rgb), opacity-preset(medium) ) 0%,
						rgba( var(--text-rgb), opacity-preset(medium) ) 100%
					);
					background-position: 0 center;
					background-size: 1em 2px;
					background-repeat: no-repeat
				}
			}

		}
		@media (orientation: landscape) {
			@include flow(block, center);
			@include align(fill);
			

			box-shadow: 2px 0 0 rgba( var(--text-rgb), opacity-preset(medium) );

			div {
				@include flow(block);
				@include align(end);
			}

			> :first-child {
				margin-top: -(1/3)*1em;
			}
			> :last-child {
				margin-bottom: -(1/3)*1em;
			}
		}


		div {
			@include flow(end);

			&:before {
				width: 2em;
				height: 2px;
				box-shadow: 0 2px 0 rgba( var(--text-rgb), opacity-preset(medium) ) ;
			}

		}

		span {
			white-space: pre;
			padding: 0 1em;

			&:last-child {
				@include ephemeral;
			}
		}

		ul {
			@media (orientation: portrait) {
				@include flow(block, end);


				li {
					padding: 1em 0;
					margin-bottom: 0.5em;
					@include flow(block, end);
				}
			}
			@media (orientation: landscape) {
				@include flow(inline, end);

				margin-bottom: 1.5em;

				li {
					padding: 0 1em;
				}
			}


			font-family: $typeface-mono;


			li {
				flex-grow: 1;
			}
		}
	}
}



.text-align\:left {
	text-align: left;
}

.text\:large {
	@media (orientation: portrait) {
		font-size: 100%;
	}
	@media (orientation: landscape) {
		font-size: 150%;
	}
}

.font-style\:italic {
	font-style: italic;
}

.text\:sans {
	font-family: $typeface-sans
}

.text\:mono {
	font-family: $typeface-mono;
}

.liststyle\:arrows {
	list-style: disclosure-closed !important;
	
	::marker {
		content: "◇\00a0\00a0";
	}
}




figure {
	display: flex;
	place-content: center;
	position: relative;
	overflow: hidden;
	padding: 11vw;
	margin: 0;
	
	img {
		width: 100%;
		height: 100%;
		box-shadow: 0 0 5.5vw rgba(0,0,0,0.25);
	}
	
	img + img {
		z-index: -1;
		filter: blur(11vw) saturate(2);
		object-fit: cover;
		position: absolute;
		transform: scale(1.2);
		opacity: 0.8;
	}
}
